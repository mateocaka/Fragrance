@model IEnumerable<Parfume>
@{
    var currentFilters = ViewBag.CurrentFilters;
    var originalData = ViewBag.OriginalData as List<Parfume>;
}

<div class="container-fluid">
    <header class="text-center">
        <form method="get" class="mt-3 col-md-6 mx-auto">
            <div class="input-group">
                <div class="form-control d-flex flex-wrap align-items-center" style="gap: 5px; min-height: 50px;">
                    @if (!string.IsNullOrEmpty(currentFilters.Gender))
                    {
                        <div class="badge bg-primary d-flex align-items-center">
                            @currentFilters.Gender
                            <a href="@Url.Action("Index", new {
                                search = currentFilters.Search,
                                brand = currentFilters.Brand,
                                rating = currentFilters.Rating
                            })" class="text-white ms-2">
                                <i class="bi bi-x-lg"></i>
                            </a>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(currentFilters.Brand))
                    {
                        <div class="badge bg-primary d-flex align-items-center">
                            @currentFilters.Brand
                            <a href="@Url.Action("Index", new {
                                search = currentFilters.Search,
                                gender = currentFilters.Gender,
                                rating = currentFilters.Rating
                            })" class="text-white ms-2">
                                <i class="bi bi-x-lg"></i>
                            </a>
                        </div>
                    }
                    @if (!string.IsNullOrEmpty(currentFilters.Rating))
                    {
                        var starRating = string.Concat(Enumerable.Repeat("⭐", int.Parse(currentFilters.Rating)));

                        <div class="badge bg-primary  d-flex align-items-center">
                            @starRating
                            <a href="@Url.Action("Index", new {
                                 search = currentFilters.Search,
                                 gender = currentFilters.Gender,
                                brand = currentFilters.Brand
                                })" class="text-white ms-2">
                                <i class="bi bi-x-lg"></i>
                            </a>
                        </div>
                    }
                    <input type="search"
                    class="border-0 flex-grow-1"
                    name="search"
                    placeholder="Search perfumes, brands..."
                    value="@currentFilters.Search"
                    style="min-width: 200px; outline: none">
                </div>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-search"></i>
                </button>
            </div>

            @if (!string.IsNullOrEmpty(currentFilters.Gender))
            {
                <input type="hidden" name="gender" value="@currentFilters.Gender">
            }
            @if (!string.IsNullOrEmpty(currentFilters.Brand))
            {
                <input type="hidden" name="brand" value="@currentFilters.Brand">
            }
            @if (!string.IsNullOrEmpty(currentFilters.Rating))
            {
                <input type="hidden" name="rating" value="@currentFilters.Rating">
            }
        </form>
    </header>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-3">
                <h4>
                    <a href="@Url.Action("Index")" class="text-decoration-none">

                        <h3 class="text-info-emphasis">CLEAR ALL FILTERS</h3>
                    </a>
                </h4>

                <h5 class="mt-3">GENDER</h5>
                <div class="btn-group-vertical w-100">
                    @foreach (var g in ViewBag.Genders)
                    {
                        <a href="@Url.Action("Index", new {
                            search = currentFilters.Search,
                            brand = currentFilters.Brand,
                            rating = currentFilters.Rating,
                            gender = g
                        })" class="btn @(currentFilters.Gender == g ? "btn-primary" : "btn-outline-secondary") text-start">
                            @g (@originalData.Count(p => p.Gender == g))
                        </a>
                    }
                </div>

                <h5 class="mt-4">DESIGNERS</h5>
                <input type="text" id="brandSearch" class="form-control" placeholder="Search for designers">
                <div class="list-group mt-2" id="brandList">
                    @foreach (var brand in ViewBag.Brands)
                    {
                        <a href="@Url.Action("Index", new {
                            search = currentFilters.Search,
                            gender = currentFilters.Gender,
                            rating = currentFilters.Rating,
                            brand = brand
                        })" class="list-group-item list-group-item-action @(currentFilters.Brand == brand ? "active" : "")">
                            @brand (@originalData.Count(p => p.Author.Equals(brand, StringComparison.OrdinalIgnoreCase)))
                        </a>
                    }
                </div>

                <h5 class="mt-4">RATING</h5>
                <div class="btn-group-vertical w-100">
                    @{

                        var ratingMap = new Dictionary<string, string>
                    {
                    {"1", "⭐"},
                    {"2", "⭐⭐"},
                    {"3", "⭐⭐⭐"},
                    {"4", "⭐⭐⭐⭐"},
                    {"5", "⭐⭐⭐⭐⭐"}
                    };
                    }

                    @foreach (var r in ViewBag.Ratings)
                    {
                        <a href="@Url.Action("Index", new {
            search = currentFilters.Search,
            gender = currentFilters.Gender,
            brand = currentFilters.Brand,
            rating = r
        })" class="btn @(currentFilters.Rating == r ? "btn-primary" : "btn-outline-secondary") text-start">
                            @ratingMap[r]+ 
                        </a>
                    }
                </div>
            </div>

            <div class="col-md-9">
                <div class="row">
                    @foreach (var parfume in Model)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="card h-100 shadow">
                                @if (parfume.Quantity == 0)
                                {
                                    <a asp-action="SoldOUT" asp-route-parfumeid="@parfume.ParfumeId">
                                        <img src="~/images/Product/360_F_1333122870_gxDGHUPtdJYruUGTSpHCpwuHjVxzFnjx.jpg" class="card-img-top perfume-image" />
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Details" asp-route-parfumeid="@parfume.ParfumeId">
                                        <img src="@parfume.ImgUrl" class="card-img-top perfume-image" alt="@parfume.Name">
                                    </a>
                                }
                                <div class="card-body text-center">
                                    <h5 class="card-title">@parfume.Author</h5>
                                    <p class="card-text text-muted">@parfume.Name</p>
                                    <div class="badge bg-light">
                                        @parfume.Price$
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('brandSearch').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const brands = document.getElementById('brandList').getElementsByTagName('a');

            Array.from(brands).forEach(brand => {
                const brandText = brand.textContent.toLowerCase();
                brand.style.display = brandText.includes(searchTerm) ? 'block' : 'none';
            });
        });
    </script>
}