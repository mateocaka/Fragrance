@{
    ViewData["Title"] = "Dashboard";
}

<div class="container mt-4">
    <h1 class="text-center mb-4">Dashboard Raportesh</h1>


    <div class="row mb-4">
       
        <div class="col-md-4">
            <div class="card text-center bg-white border-dark">
                <div class="card-body">
                    <h5 class="card-title">Përdorues të Regjistruar</h5>
                    <p class="card-text display-6" id="totalUsers">0</p>
                </div>
            </div>
        </div>


        <div class="col-md-4">
            <div class="card text-center bg-white border-dark">
                <div class="card-body">
                    <h5 class="card-title">Shitjet Këtë Muaj</h5>
                    <p class="card-text display-6" id="monthlySales">€0.00</p>
                    <small id="salesChangeIndicator"></small>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="card text-center bg-white border-dark">
                <div class="card-body">
                    <h5 class="card-title">Porositë Totale</h5>
                    <p class="card-text display-6" id="totalOrders">0</p>
                </div>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-dark text-white">
            <h3 class="mb-0">Lista e Produkteve</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="productsTable" class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Emri</th>
                            <th>Sasia</th>
                            <th>Çmimi</th>
                        </tr>
                    </thead>
                    <tbody id="productsTableBody">
                  
                    </tbody>
                </table>
            </div>
        </div>
    </div>

   
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-dark text-white">
                    <h3 class="mb-0">Porositë Sipas Muajve</h3>
                </div>
                <div class="card-body">
                    <canvas id="ordersChart" height="250"></canvas>
                </div>
            </div>
        </div>


        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-dark text-white">
                    <h3 class="mb-0">Shitjet në Vitin 2025</h3>
                </div>
                <div class="card-body">
                    <canvas id="salesChart" height="250"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        $(document).ready(function() {

            fetch('/api/DashboardApi/total-users')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch total users');
                    return response.json();
                })
                .then(data => {
                    document.getElementById('totalUsers').textContent = data;
                })
                .catch(error => console.error('Error fetching total users:', error));


            fetch('/api/DashboardApi/monthly-sales')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch monthly sales');
                    return response.json();
                })
                .then(data => {
                    const formattedSales = new Intl.NumberFormat('de-DE', {
                        style: 'currency',
                        currency: 'EUR'
                    }).format(data.totalSales);

                    document.getElementById('monthlySales').textContent = formattedSales;

                    const changeIndicator = document.getElementById('salesChangeIndicator');
                    const percentage = data.percentageChange.toFixed(2);

                    if (data.percentageChange > 0) {
                        changeIndicator.innerHTML = `<i class="fas fa-arrow-up"></i> ${percentage}% nga muaji i kaluar`;
                    } else if (data.percentageChange < 0) {
                        changeIndicator.innerHTML = `<i class="fas fa-arrow-down"></i> ${Math.abs(percentage)}% nga muaji i kaluar`;
                    } else {
                        changeIndicator.textContent = 'Nuk ka ndryshim nga muaji i kaluar';
                    }
                })
                .catch(error => console.error('Error fetching monthly sales:', error));

            fetch('/api/DashboardApi/total-orders')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch total orders');
                    return response.json();
                })
                .then(data => {
                    document.getElementById('totalOrders').textContent = data;
                })
                .catch(error => console.error('Error fetching total orders:', error));

            fetch('/api/DashboardApi/products')
                .then(response => {
                    if (!response.ok) throw new Error(`Failed to fetch products: ${response.statusText}`);
                    return response.json();
                })
                .then(data => {
                    console.log('Products data:', data); 
                    const tbody = document.getElementById('productsTableBody');
                    tbody.innerHTML = ''; 
                    if (data.length === 0) {
                        tbody.innerHTML = '<tr><td colspan="3">No products found</td></tr>';
                        return;
                    }
                    data.forEach(product => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${product.name || 'Unknown'}</td>
                            <td>${product.quantity || 0}</td>
                            <td>${new Intl.NumberFormat('de-DE', {
                                style: 'currency',
                                currency: 'EUR'
                            }).format(product.price || 0)}</td>
                        `;
                        tbody.appendChild(row);
                    });

       
                    $('#productsTable').DataTable({
                        responsive: true,
                        language: {
                            url: '//cdn.datatables.net/plug-ins/1.11.5/i18n/sq.json'
                        }
                    });
                })
                .catch(error => {
                    console.error('Error fetching products:', error);
                    const tbody = document.getElementById('productsTableBody');
                    tbody.innerHTML = '<tr><td colspan="3">Error loading products</td></tr>';
                });

            fetch('/api/DashboardApi/orders-per-month')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch orders per month');
                    return response.json();
                })
                .then(data => {
                    const labels = data.map(item => {
                        const monthNames = ["Jan", "Feb", "Mar", "Prill", "Maj", "Qer", "Kor", "Gus", "Sht", "Tet", "Nën", "Dhj"];
                        return `${monthNames[item.month - 1]} ${item.year}`;
                    });
                    const values = data.map(item => item.count);

                    new Chart(document.getElementById('ordersChart'), {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Numri i Porosive',
                                data: values,
                                backgroundColor: 'rgba(169, 169, 169, 0.7)',
                                borderColor: 'rgba(169, 169, 169, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return `Porosi: ${context.raw}`;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: { beginAtZero: true, ticks: { precision: 0 } }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching orders per month:', error));


            fetch('/api/DashboardApi/sales-2025')
                .then(response => {
                    if (!response.ok) throw new Error('Failed to fetch sales 2025');
                    return response.json();
                })
                .then(data => {
                    const monthlySales = Array(12).fill(0);
                    data.forEach(item => {
                        monthlySales[item.month - 1] = item.total;
                    });

                    const monthNames = ["Jan", "Feb", "Mar", "Prill", "Maj", "Qer", "Kor", "Gus", "Sht", "Tet", "Nën", "Dhj"];

                    new Chart(document.getElementById('salesChart'), {
                        type: 'line',
                        data: {
                            labels: monthNames,
                            datasets: [{
                                label: 'Shitjet (€)',
                                data: monthlySales,
                                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 2,
                                tension: 0.1,
                                fill: true
                            }]
                        },
                        options: {
                            responsive: true,
                            plugins: {
                                legend: { position: 'top' },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            return `Shitje: ${new Intl.NumberFormat('de-DE', {
                                                style: 'currency',
                                                currency: 'EUR'
                                            }).format(context.raw)}`;
                                        }
                                    }
                                }
                            },
                            scales: {
                                y: { beginAtZero: true }
                            }
                        }
                    });
                })
                .catch(error => console.error('Error fetching sales 2022:', error));
        });
    </script>
}