@model OrderVM

<div class="container">
    <div class="card">
        <div class="card-header bg-dark text-light">
            <div class="row">
                <div class="col-6">
                    <h3>Order Details - #@Model.OrderHeader.Id</h3>
                </div>
                <div class="col-6 text-end">
                    <a asp-action="Index" class="btn btn-outline-light">Back to Orders</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <h4>Order Information</h4>
                    <p><strong>Name:</strong> @Model.OrderHeader.Name</p>
                    <p><strong>Phone:</strong> @Model.OrderHeader.PhoneNumber</p>
                    <p><strong>Email:</strong> @Model.OrderHeader.ApplicationUser?.Email</p>
                    <p><strong>Order Date:</strong> @Model.OrderHeader.OrderDate.ToString("MM/dd/yyyy hh:mm tt")</p>
                    <p>
                        <strong>Status:</strong>
                        <span class="badge @GetStatusBadgeClass(Model.OrderHeader.OrderStatus)">
                            @Model.OrderHeader.OrderStatus
                        </span>
                    </p>
                    <p>
                        <strong>Payment Status:</strong>
                        <span class="badge @GetPaymentStatusBadgeClass(Model.OrderHeader.PaymentStatus)">
                            @Model.OrderHeader.PaymentStatus
                        </span>
                    </p>
                </div>
                <div class="col-md-6">
                    <h4>Shipping Address</h4>
                    <p>@Model.OrderHeader.StreetAddress</p>
                    <p>@Model.OrderHeader.City, @Model.OrderHeader.State @Model.OrderHeader.PostalCode</p>
                </div>
            </div>

            <h4>Order Items</h4>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderDetail)
                    {
                        <tr>
                            <td>@item.Parfume.Name</td>
                            <td>@item.Price.ToString("C")</td>
                            <td>@item.Count</td>
                            <td>@((item.Price * item.Count).ToString("C"))</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-end"><strong>Order Total:</strong></td>
                        <td>@Model.OrderHeader.OrderTotal.ToString("C")</td>
                    </tr>
                </tfoot>
            </table>

            @if (Model.OrderHeader.OrderStatus == SD.StatusPending)
            {
                <div class="row mt-4">
                    <div class="col-md-6">
                        <button onclick="updateOrderStatus(@Model.OrderHeader.Id, '@SD.StatusApproved')"
                                class="btn btn-success w-100">
                            Approve Order
                        </button>
                    </div>
                    <div class="col-md-6">
                        <button onclick="updateOrderStatus(@Model.OrderHeader.Id, '@SD.StatusCancelled')"
                                class="btn btn-danger w-100">
                            Cancel Order
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            SD.StatusApproved => "bg-success",
            SD.StatusPending => "bg-warning text-dark",
            SD.StatusCancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    public string GetPaymentStatusBadgeClass(string status)
    {
        return status switch
        {
            SD.PaymentStatusApproved => "bg-success",
            SD.PaymentStatusPending => "bg-warning text-dark",
            SD.PaymentStatusRejected => "bg-danger",
            SD.PaymentStatusDelayedPayment => "bg-info",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        function updateOrderStatus(orderId, status) {
            Swal.fire({
                title: 'Are you sure?',
                text: `You are about to ${status === '@SD.StatusApproved' ? 'approve' : 'cancel'} this order`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, proceed!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '/Admin/Order/UpdateOrderStatus',
                        type: 'POST',
                        data: {
                            orderId: orderId,
                            status: status
                        },
                        success: function(response) {
                            if (response.success) {
                                Swal.fire(
                                    'Success!',
                                    response.message,
                                    'success'
                                ).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire(
                                    'Error!',
                                    response.message,
                                    'error'
                                );
                            }
                        }
                    });
                }
            });
        }
    </script>
}